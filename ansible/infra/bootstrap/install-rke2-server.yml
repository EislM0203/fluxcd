---
- name: Install RKE2 Kubernetes Single Node
  hosts: rke2_server
  become: yes
  vars:
    rke2_version: "latest"
    
  tasks: 
    - name: Collect all ansible_host values from inventory
      set_fact:
        all_ansible_hosts: "{{ groups['all'] | map('extract', hostvars, 'ansible_host') | list | unique }}"
        
    - name: Create RKE2 config directory
      file:
        path: /etc/rancher/rke2
        state: directory
        mode: '0755'

    - name: Download and install RKE2
      shell: |
        curl -sfL https://get.rke2.io | sh -
      args:
        creates: /usr/local/bin/rke2

    - name: Create RKE2 config for single server
      template:
        src: rke2-config.yaml.j2
        dest: /etc/rancher/rke2/config.yaml
        mode: '0640'
    # - name: Create RKE2 manifests directory
    #   file:
    #     path: /var/lib/rancher/rke2/server/manifests
    #     state: directory
    #     mode: '0755'

    # - name: Set network interface for RKE2
    #   copy:
    #     content: |
    #       apiVersion: helm.cattle.io/v1
    #       kind: HelmChartConfig
    #       metadata:
    #         name: rke2-canal
    #         namespace: kube-system
    #       spec:
    #         valuesContent: |-
    #           flannel:
    #             iface: "tailscale0"
    #     dest: /var/lib/rancher/rke2/server/manifests/rke2-canal-config.yaml
    #     mode: '0755'

    # Start RKE2 on the server
    - name: Enable and start RKE2 server
      systemd:
        name: rke2-server.service
        enabled: yes
        state: started
        daemon_reload: yes

    - name: Wait for server to be ready
      wait_for:
        host: "{{ ansible_host }}"
        port: 9345
        timeout: 300
      
    # - name: Wait for node-token to be generated
    #   wait_for:
    #     path: /var/lib/rancher/rke2/server/node-token
    #     timeout: 300

    # - name: Wait for node to be ready in Kubernetes cluster
    #   shell: /var/lib/rancher/rke2/bin/kubectl --kubeconfig /etc/rancher/rke2/rke2.yaml get nodes --no-headers | wc -l
    #   register: node_count
    #   until: node_count.stdout | int == 1
    #   retries: 30
    #   delay: 10

    - name: Wait for node to be in Ready state
      shell: /var/lib/rancher/rke2/bin/kubectl --kubeconfig /etc/rancher/rke2/rke2.yaml get nodes --no-headers | grep -c "Ready"
      register: ready_nodes
      until: ready_nodes.stdout | int == 1
      retries: 30
      delay: 10

    - name: Display cluster status
      shell: /var/lib/rancher/rke2/bin/kubectl --kubeconfig /etc/rancher/rke2/rke2.yaml get nodes
      register: cluster_status
      
    - name: Show cluster information
      debug:
        var: cluster_status.stdout_lines

    - name: Read original kubeconfig
      slurp:
        src: /etc/rancher/rke2/rke2.yaml
      register: kubeconfig_content
      
    - name: Save kubeconfig locally with correct server address
      delegate_to: localhost
      become: true
      copy:
        content: "{{ (kubeconfig_content.content | b64decode).replace('https://127.0.0.1:6443', 'https://' + ansible_host + ':6443') }}"
        dest: "/home/markuseisl/.kube/config"
        owner: 1000
        group: 1000
        mode: '0600'
